query search(
  $id: ID
  $limit: Int = 20
  $page: Int = 1
  $profile_id: String
  $order_ids: [String!]
  $amount: String
  $currency: String
  $gateway: String
  $c__status: String
  $with_profile: Boolean = false
  $with_order_details: Boolean = false
  $with_gateway_requests: Boolean = false
  $with_any_gateway_respones: Boolean = false
) {
  transactions: records(
    per_page: $limit
    page: $page
    filter: {
      id: { value: $id }
      table: { value: "transaction" }
      properties: [
        { name: "profile_id" value: $profile_id }
        { name: "order_ids" array_contains: $order_ids }
        { name: "amount" value: $amount }
        { name: "currency" value: $currency }
        { name: "gateway" value: $gateway }
        { name: "c__status" value: $c__status }
      ]
    }
    sort: [
      { created_at: { order: DESC }}
    ]
  ){
    total_entries
    results {
      id
      created_at
      type: table
      profile_id: property(name: "profile_id")
      order_ids: property_array(name: "order_ids")
      amount: property_int(name: "amount")
      currency: property(name: "currency")
      gateway: property(name: "gateway")
      c__status: property(name: "c__status")

      profile: related_record(
        join_on_property: "profile_id"
        foreign_property: "id"
        table: "profile"
      ) @include(if: $with_profile) {
        id
        type: table

        first_name: property(name: "first_name")
        last_name: property(name: "last_name")
        phone: property(name: "phone")
        user: related_user(join_on_property: "user_id", foreign_property: "id") {
          id
          email
        }
        default_address: related_record(
          table: "address"
          join_on_property: "default_address_id"
          foreign_property: "id"
        ) {
          id
          created_at
          type: table

          full_name: property(name: "full_name")
          country: property(name: "country")
          city: property(name: "city")
          area: property(name: "area")
          street: property(name: "street")
          building_number: property(name: "building_number")
          flat_number: property(name: "flat_number")
        }
      }
      orders: related_records(
        table: "order", join_on_property: "order_ids", foreign_property: "id"
      ){
        id
        type: table
        created_at
        total_price_cents: property_int(name: "total_price_cents")
        total_shipping_cost_cents: property_int(name: "total_shipping_cost_cents")
        products_price_cents: property_int(name: "products_price_cents")
        currency: property(name: "currency")
        shipping_type: property(name: "shipping_type")
        payment_type: property(name: "payment_type")
        c__status: property(name: "c__status")

        status: related_record(
          join_on_property: "id" foreign_property: "object_id" table: "status" sort: { created_at: { order: ASC } }
        ) @include(if: $with_order_details) {
          id
          type: table
          created_at
          name: property(name: "name")
        }

        buyer: related_record(
          join_on_property: "buyer"
          foreign_property: "id"
          table: "profile"
        ) {
          id
          type: table
        }

        seller: related_record(
          join_on_property: "seller"
          foreign_property: "id"
          table: "organization"
        ) {
          id
          name: property(name: "name")
        }

        order_delivery: related_record(
          join_on_property: "id"
          foreign_property: "order_id"
          table: "order_delivery"
          sort: { created_at: { order: ASC } }
        ) @include(if: $with_order_details) {
          id
          delivery_information: property(name: "delivery_information")
          delivery_external_id: property(name: "delivery_external_id")
          status: related_record(
            join_on_property: "id"
            foreign_property: "object_id"
            table: "status"
            sort: { created_at: { order: ASC } }
          ) {
            id
            created_at
            name: property(name: "name")
            timestamp: property(name: "timestamp")
          }
        }

        line_items: related_records(
          join_on_property: "id"
          foreign_property: "order_id"
          table: "line_item"
          sort: { properties: { name: "name", order: ASC } }
        ) {
          id
          created_at
          item_id: property(name: "item_id")
          quantity: property_int(name: "quantity")
          price_cents: property_int(name: "price_cents")
          currency: property(name: "currency")
          total_price_cents: property_int(name: "total_price_cents")
          voucher_amount_cents: property_int(name: "voucher_amount_cents")

          item: related_record(
            join_on_property: "item_id"
            foreign_property: "id"
            table: "item"
          ) {
            id
            quantity: property_int(name: "quantity")
            cover_photo_url: property(name: "cover_photo_url")
            item_detail: related_record(
              table: "item_detail"
              join_on_property: "id"
              foreign_property: "item_id"
              filter: { properties: { name: "lang", value: "en" } }
            ) {
              id
              type: table
              name: property(name: "name")
              description: property(name: "description")
              lang: property(name: "lang")
            }

            item_inventory: related_record(
              table: "item_inventory"
              join_on_property: "item_inventory_id"
              foreign_property: "id"
            ) {
              id
              type: table
              item_id: property(name: "item_id")
              quantity: property_int(name: "quantity")
              sku: property(name: "sku")
              c__status: property(name: "c__status")
            }
          }
        }
      }

      create_bill_gateway_request: related_record(
        table: "gateway_request"
        join_on_property: "id", foreign_property: "external_id"
        sort: { created_at: { order: ASC } }
        filter: {
          properties: { name: "api_call_name" value: "mobicash_checkout_create_bill" }
        }
      ) {
        id
        created_at
        response: property(name: "response")
      }

      neo_payment_intent_gateway_request: related_record(
        table: "gateway_request"
        join_on_property: "id", foreign_property: "external_id"
        sort: { created_at: { order: ASC } }
        filter: {
          properties: { name: "api_call_name" value: "neo_payment_intent" }
        }
      ) {
        id
        created_at
        type: table

        gateway: property(name: "gateway")
        external_id: property(name: "external_id")
        payload: property(name: "payload")
        response: property(name: "response")
        response_status: property(name: "response_status")
        api_call_name: property(name: "api_call_name")

        payment_type: property(name: "payment_type")
        shipping_type: property(name: "shipping_type")
      }

      update_bill_gateway_request: related_record(
        join_on_property: "id"
        foreign_property: "external_id"
        table: "gateway_request"
        sort: { created_at: { order: ASC } }
        filter: {
          properties: { name: "api_call_name" value: "mobicash_update_bill_status" }
        }
      ) @include(if: $with_gateway_requests) {
        id
        created_at
        payload: property(name: "payload")
      }

      get_bill_status: related_record(
        join_on_property: "id"
        foreign_property: "external_id"
        table: "gateway_request"
        sort: { created_at: { order: ASC } }
        filter: {
          properties: { name: "api_call_name" value: "mobicash_checkout_get_bill_status" }
        }
      ) @include(if: $with_gateway_requests) {
        id
        created_at
        response: property(name: "response")
      }

      neo_payment_status_gateway_request: related_record(
        table: "gateway_request"
        join_on_property: "id", foreign_property: "external_id"
        sort: { created_at: { order: ASC } }
        filter: {
          properties: { name: "api_call_name" value: "neo_payment_status" }
        }
      ) @include(if: $with_gateway_requests) {
        id
        created_at
        type: table

        gateway: property(name: "gateway")
        external_id: property(name: "external_id")
        payload: property(name: "payload")
        response: property(name: "response")
        response_status: property(name: "response_status")
        api_call_name: property(name: "api_call_name")
      }

      cybersource_payment_status_gateway_request: related_record(
        table: "gateway_request"
        join_on_property: "id", foreign_property: "external_id"
        sort: { created_at: { order: ASC } }
        filter: {
          properties: { name: "api_call_name" value: "cybersource_update_bill_status" }
        }
      ) @include(if: $with_gateway_requests) {
        id
        created_at
        type: table

        gateway: property(name: "gateway")
        external_id: property(name: "external_id")
        payload: property(name: "payload")
        response: property(name: "response")
        response_status: property(name: "response_status")
        api_call_name: property(name: "api_call_name")
      }

      gateway_respones: related_records(
        join_on_property: "id"
        foreign_property: "external_id"
        table: "gateway_request"
        sort: { created_at: { order: DESC } }
      ) @include(if: $with_any_gateway_respones) {
        id
        created_at
        payload: property(name: "payload")
        response: property(name: "response")
        api_call_name: property(name: "api_call_name")
        gateway: property(name: "gateway")
      }

      status: related_record(
        join_on_property: "id"
        foreign_property: "object_id"
        table: "status"
        sort: { properties: { name: "name", order: ASC } }
      ) {
        id
        type: table
        created_at
        name: property(name: "name")
        timestamp: property(name: "timestamp")
      }
    }
  }
}
